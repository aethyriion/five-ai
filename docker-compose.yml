version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 30s
      timeout: 10s
      retries: 3

  fivem:
    build:
      context: ./server
      dockerfile: Dockerfile
    environment:
      - FIVEM_LICENSE_KEY=${FIVEM_LICENSE_KEY}
      - FIVEM_SERVER_NAME=${FIVEM_SERVER_NAME}
      - FIVEM_MAX_CLIENTS=${FIVEM_MAX_CLIENTS}
      - FIVEM_RCON_PASSWORD=${FIVEM_RCON_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - HEALTH_CHECK_TOKEN=${HEALTH_CHECK_TOKEN}
    ports:
      - "30120:30120"
      - "30121:30121"
      - "30122:30122"
    volumes:
      - ./resources:/opt/cfx-server/resources/[local]
      - ./server/server.cfg:/opt/cfx-server/server.cfg
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:30120/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  ai-maintainer:
    build:
      context: ./ai-maintainer
      dockerfile: Dockerfile
    environment:
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - GITHUB_WEBHOOK_SECRET=${GITHUB_WEBHOOK_SECRET}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - REPOSITORY_OWNER=${REPOSITORY_OWNER}
      - REPOSITORY_NAME=${REPOSITORY_NAME}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_POLL_INTERVAL=300
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_INCLUDE_RESTARTING=true
    command: --interval 300 --cleanup

volumes:
  postgres_data: